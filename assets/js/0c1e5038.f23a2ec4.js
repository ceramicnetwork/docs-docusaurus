"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4559],{44731:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>a});var r=o(11527),c=o(63883);const i={},s="Running Ceramic nodes in the cloud environment",t={id:"protocol/js-ceramic/guides/ceramic-nodes/running-cloud",title:"Running Ceramic nodes in the cloud environment",description:"---",source:"@site/docs/protocol/js-ceramic/guides/ceramic-nodes/running-cloud.md",sourceDirName:"protocol/js-ceramic/guides/ceramic-nodes",slug:"/protocol/js-ceramic/guides/ceramic-nodes/running-cloud",permalink:"/docs/protocol/js-ceramic/guides/ceramic-nodes/running-cloud",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"protocol",previous:{title:"Launch a local Ceramic node",permalink:"/docs/protocol/js-ceramic/guides/ceramic-nodes/running-locally"},next:{title:"Clients",permalink:"/docs/protocol/js-ceramic/guides/ceramic-clients/clients-overview"}},l={},a=[{value:"Who should run a Ceramic node?",id:"who-should-run-a-ceramic-node",level:2},{value:"Things to know",id:"things-to-know",level:2},{value:"Required steps",id:"required-steps",level:2},{value:"Configure your Kubernetes Cluster",id:"configure-your-kubernetes-cluster",level:3},{value:"Connect to your Kubernetes Cluster",id:"connect-to-your-kubernetes-cluster",level:3},{value:"Deploy Ceramic",id:"deploy-ceramic",level:3},{value:"Connecting to Ceramic",id:"connecting-to-ceramic",level:3},{value:"Connect to the mainnnet anchor service",id:"connect-to-the-mainnnet-anchor-service",level:3},{value:"Example with Docker containers",id:"example-with-docker-containers",level:3},{value:"Docker-compose",id:"docker-compose",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"running-ceramic-nodes-in-the-cloud-environment",children:"Running Ceramic nodes in the cloud environment"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"This guide provides the instructions for launching a well-connected, production-ready Ceramic node in the cloud environment."}),"\n",(0,r.jsx)(n.h2,{id:"who-should-run-a-ceramic-node",children:"Who should run a Ceramic node?"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["To run your application on ",(0,r.jsx)(n.code,{children:"mainnet"})," you'll need to run your own production-ready node or to use a community hosted nodes provider like ",(0,r.jsx)(n.a,{href:"https://hirenodes.io/",children:"hirenodes"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"things-to-know",children:"Things to know"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ceramic networks"}),"\nThere are currently three main Ceramic networks:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"mainnet"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"testnet-clay"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"dev-unstable"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Learn more about each network ",(0,r.jsx)(n.a,{href:"/docs/protocol/js-ceramic/networking/networks",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["By default, Ceramic will connect to ",(0,r.jsx)(n.code,{children:"testnet-clay"})," and a ",(0,r.jsx)(n.a,{href:"https://github.com/ceramicnetwork/ceramic-anchor-service",children:"Ceramic Anchor Service"})," running on Gnosis. When you are ready to get on Ceramic ",(0,r.jsx)(n.code,{children:"mainnet"}),", check out ",(0,r.jsx)(n.a,{href:"../../../../composedb/guides/composedb-server/access-mainnet",children:"this guide"})," to get access to our ",(0,r.jsx)(n.code,{children:"mainnet"})," anchor service running on Ethereum mainnet."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Supported platforms"})," \u2013 You can run Ceramic nodes on a cloud provider of your choice. This guide will include instructions for the Digital Ocean Kubernetes, but the\ninstructions can be applied to the vast majority of other cloud providers like AWS and others."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Supported Operating Systems:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Linux"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"At the moment, developers are provided with Linux-based docker images for cloud deployment."})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Compute requirements:"})}),"\n",(0,r.jsxs)(n.p,{children:["You\u2019ll need sufficient compute resources to power ",(0,r.jsx)(n.code,{children:"ceramic-one"}),", ",(0,r.jsx)(n.code,{children:"js-ceramic"})," and ",(0,r.jsx)(n.code,{children:"PostgreSQL"}),". Below are the recommended requirements:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"4 vCPUs"}),"\n",(0,r.jsx)(n.li,{children:"8GB RAM"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"required-steps",children:"Required steps"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Below are the steps required for running a Ceramic node in production. This guide will teach you how to:"}),"\n",(0,r.jsx)(n.h3,{id:"configure-your-kubernetes-cluster",children:"Configure your Kubernetes Cluster"}),"\n",(0,r.jsx)(n.p,{children:"Running a Ceramic Node on DO Kubernetes will require two tools:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"kubectl"})," - the Kubernetes command line tool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://docs.digitalocean.com/reference/doctl/how-to/install/",children:"doctl"})," - the Digital Ocean command line tool"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Make sure you have these tools installed on your machine before proceeding to the next step of this guide."}),"\n",(0,r.jsxs)(n.p,{children:["To create a Digital Ocean Kuberetes cluster, follow an official ",(0,r.jsx)(n.a,{href:"https://docs.digitalocean.com/products/kubernetes/how-to/create-clusters/",children:"DigitalOcean tutorial"}),". The process of setting up your Kubernetes cluster will take about 10 minutes. Once it\u2019s up and running, you are good to continue with the next step."]}),"\n",(0,r.jsx)(n.h3,{id:"connect-to-your-kubernetes-cluster",children:"Connect to your Kubernetes Cluster"}),"\n",(0,r.jsx)(n.p,{children:"Once the cluster is up and running, you will be provided a command that you can use to authenticate your cluster on your local machine. You will be provided with a command unique to your cluster, but For example:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"doctl kubernetes cluster kubeconfig save 362dda8b-b555-4c47-9bf0-1a81cf58e0a8"})}),"\n",(0,r.jsx)(n.p,{children:"Run this command on your local machine using your local terminal. After authenticating, verify the connectivity:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"kubectl config get-contexts"})}),"\n",(0,r.jsx)(n.h3,{id:"deploy-ceramic",children:"Deploy Ceramic"}),"\n",(0,r.jsx)(n.p,{children:"Running a Ceramic node will require configuring three components:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ceramic-one"})," - a binary which contains the Ceramic Recon protocol implementation in Rust"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"js-ceramic"})," - component which provides the API interface for Ceramic applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"postgres"})," - a database used for indexing"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["To simplify the configuration of all these services, you can use the ",(0,r.jsx)(n.a,{href:"https://github.com/ceramicstudio/simpledeploy/tree/main",children:"SimpleDeploy"}),", a set of infra scripts that will make the configuration process faster and easier."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Clone the ",(0,r.jsx)(n.a,{href:"https://github.com/ceramicstudio/simpledeploy.git",children:"simpledeploy"})," repository and enter the created directory:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/ceramicstudio/simpledeploy.git\ncd simpledeploy\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Create a namespace for the nodes:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"export CERAMIC_NAMESPACE=ceramic-one-0-17-0\nkubectl create namespace ${CERAMIC_NAMESPACE}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Create ephemereal secrets for js-ceramic and postgres"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"./scripts/create-secrets.sh\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Apply manifests:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl apply -k .\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"Wait for the pods to stat. It will take a few minutes for the deployment to pull the docker images and start the containers. You can watch the process with the following command:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl get pods --watch --namespace ceramic-one-0-17-0\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You will know that your deployment is up and running when all of the processes have a status ",(0,r.jsx)(n.code,{children:"Running"})," as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"NAME           READY   STATUS    RESTARTS    AGE\njs-ceramic-0   0/1     Running   0           77s\nceramic-one-0  1/1     Running   0           77s\npostgres-0     1/1     Running   0           77s\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Hit ",(0,r.jsx)(n.code,{children:"^C"})," on your keyboard to exit this view."]}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"You can easily access the logs of each of the containers by using the command below and configuring the container name. For example, to access the Ceramic node logs, you can run:"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"kubectl logs --follow --namespace ceramic-one-0-17-0 js-ceramic-0"})})]}),"\n",(0,r.jsx)(n.h3,{id:"connecting-to-ceramic",children:"Connecting to Ceramic"}),"\n",(0,r.jsxs)(n.p,{children:["The Ceramic daemon serves an HTTP API that clients use to interact with your Ceramic node. The default API port is ",(0,r.jsx)(n.code,{children:"7007"}),". Make sure this port is available to all clients you plan to use for your application."]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Healthchecks can be run against the API endpoint ",(0,r.jsx)(n.code,{children:"/api/v0/node/healthcheck"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"connect-to-the-mainnnet-anchor-service",children:"Connect to the mainnnet anchor service"}),"\n",(0,r.jsxs)(n.p,{children:["By default, your Ceramic node will connect to the Ceramic  ",(0,r.jsx)(n.code,{children:"clay-testnet"}),". In order to connect your application to the mainnet, you will have to configure your node and verify you node DID for using the Ceramic Anchor Service (CAS). You can find a detailed step-by-step guide ",(0,r.jsx)(n.a,{href:"../../../../composedb/guides/composedb-server/access-mainnet",children:"here"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"example-with-docker-containers",children:"Example with Docker containers"}),"\n",(0,r.jsx)(n.p,{children:"All state in this configuration is ephemeral, for persistence use docker-compose."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Start ceramic-one using the host network"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"docker run --network=host \\\n  public.ecr.aws/r5b3e0r5/3box/ceramic-one:latest\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Start js-ceramic using the host network"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:"docker run --network=host ceramicnetwork/js-ceramic:develop\n"})}),"\n",(0,r.jsx)(n.h3,{id:"docker-compose",children:"Docker-compose"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Create a testing directory, and enter it."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"mkdir ceramic-recon\ncd ceramic-recon\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Create a file colled ",(0,r.jsx)(n.code,{children:"docker-compose.yaml"})," with the configuration shown in the example below and save it:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'version: \'3.8\'\n\nservices:\n  ceramic-one:\n    image: public.ecr.aws/r5b3e0r5/3box/ceramic-one:0.19.0\n    network_mode: "host"\n    volumes:\n      - ceramic-one-data:/root/.ceramic-one\n\n  js-ceramic:\n    image: ceramicnetwork/js-ceramic:develop\n    environment:\n      - CERAMIC_RECON_MODE=true\n    network_mode: "host"\n    volumes:\n      - js-ceramic-data:/root/.ceramic\n      - ./daemon.config.json:/root/.ceramic/daemon.config.json\n    command: --ipfs-api http://localhost:5001\n\nvolumes:\n  ceramic-one-data:\n    driver: local\n  js-ceramic-data:\n    driver: local\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Update the js-ceramic configuration file ",(0,r.jsx)(n.code,{children:"daemon.config.json"})," with the configurations provided below."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The js-ceramic configuration file can be found using the following path: ",(0,r.jsx)(n.code,{children:"$HOME/.ceramic/daemon.config.json "})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "anchor": {\n    "auth-method": "did"\n  },\n  "http-api": {\n    "cors-allowed-origins": [\n      ".*"\n    ],\n    "admin-dids": [\n    ]\n  },\n  "ipfs": {\n    "mode": "remote",\n    "host": "http://localhost:5001"\n  },\n  "logger": {\n    "log-level": 2,\n    "log-to-files": false\n  },\n  "metrics": {\n    "metrics-exporter-enabled": false,\n    "prometheus-exporter-enabled": true,\n    "prometheus-exporter-port": 9465\n  },\n  "network": {\n    "name": "testnet-clay"\n  },\n  "node": {   },\n  "state-store": {\n    "mode": "fs",\n    "local-directory": "/root/.ceramic/statestore/"\n  },\n  "indexing": {\n    "db": "sqlite://root/.ceramic/db.sqlite3",\n    "allow-queries-before-historical-sync": true,\n    "disable-composedb": false,\n    "enable-historical-sync": false\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"docker-compose up -d"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,c.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},63883:(e,n,o)=>{o.d(n,{Z:()=>t,a:()=>s});var r=o(50959);const c={},i=r.createContext(c);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
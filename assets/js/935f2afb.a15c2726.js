"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Why Ceramic?","href":"/docs/introduction/why-ceramic","docId":"introduction/why-ceramic","unlisted":false},{"type":"category","collapsed":false,"label":"Overview","items":[{"type":"link","label":"Ceramic Protocol","href":"/docs/introduction/protocol-overview","docId":"introduction/protocol-overview","unlisted":false},{"type":"link","label":"ComposeDB","href":"/docs/introduction/composedb-overview","docId":"introduction/composedb-overview","unlisted":false},{"type":"link","label":"Decentralized Identifiers","href":"/docs/introduction/did-overview","docId":"introduction/did-overview","unlisted":false}],"collapsible":true,"href":"/docs/introduction/intro"},{"type":"link","label":"Try it out!","href":"/sandbox"},{"type":"link","label":"Roadmap","href":"/docs/introduction/ceramic-roadmap","docId":"introduction/ceramic-roadmap","unlisted":false}],"protocol":[{"type":"link","label":"Overview","href":"/docs/protocol/js-ceramic/overview","docId":"protocol/js-ceramic/overview","unlisted":false},{"type":"category","collapsed":true,"label":"Guides","items":[{"type":"category","collapsed":true,"label":"Ceramic Nodes","items":[{"type":"link","label":"Running Locally","href":"/docs/protocol/js-ceramic/guides/ceramic-nodes/running-locally","docId":"protocol/js-ceramic/guides/ceramic-nodes/running-locally","unlisted":false},{"type":"link","label":"Running in the Cloud","href":"/docs/protocol/js-ceramic/guides/ceramic-nodes/running-cloud","docId":"protocol/js-ceramic/guides/ceramic-nodes/running-cloud","unlisted":false}],"collapsible":true},{"type":"category","collapsed":false,"label":"Ceramic clients","items":[{"type":"category","collapsed":true,"label":"JavaScript Client","items":[{"type":"link","label":"Basic Usage","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/javascript-clients/ceramic-http","docId":"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/ceramic-http","unlisted":false},{"type":"link","label":"Queries","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/javascript-clients/queries","docId":"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/queries","unlisted":false},{"type":"link","label":"Pinning","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/javascript-clients/pinning","docId":"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/pinning","unlisted":false}],"collapsible":true},{"type":"category","collapsed":true,"label":"Authentication","items":[{"type":"link","label":"Basic Usage","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/authentication/did-jsonrpc","docId":"protocol/js-ceramic/guides/ceramic-clients/authentication/did-jsonrpc","unlisted":false},{"type":"link","label":"Key DID","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/authentication/key-did","docId":"protocol/js-ceramic/guides/ceramic-clients/authentication/key-did","unlisted":false},{"type":"link","label":"DID Session","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/authentication/did-session","docId":"protocol/js-ceramic/guides/ceramic-clients/authentication/did-session","unlisted":false}],"collapsible":true},{"type":"category","collapsed":true,"label":"Stream APIs","items":[{"type":"link","label":"Using CAIP-10 Links","href":"/docs/protocol/js-ceramic/guides/ceramic-clients/stream-api/caip10-link","docId":"protocol/js-ceramic/guides/ceramic-clients/stream-api/caip10-link","unlisted":false}],"collapsible":true}],"collapsible":true}],"collapsible":true,"href":"/docs/protocol/js-ceramic/guides/guides-index"},{"type":"category","collapsed":false,"label":"Streams","items":[{"type":"link","label":"Event Log","href":"/docs/protocol/js-ceramic/streams/event-log","docId":"protocol/js-ceramic/streams/event-log","unlisted":false},{"type":"link","label":"URI Scheme","href":"/docs/protocol/js-ceramic/streams/uri-scheme","docId":"protocol/js-ceramic/streams/uri-scheme","unlisted":false},{"type":"link","label":"Consensus","href":"/docs/protocol/js-ceramic/streams/consensus","docId":"protocol/js-ceramic/streams/consensus","unlisted":false},{"type":"link","label":"Lifecycle","href":"/docs/protocol/js-ceramic/streams/lifecycle","docId":"protocol/js-ceramic/streams/lifecycle","unlisted":false}],"collapsible":true,"href":"/docs/protocol/js-ceramic/streams/streams-index"},{"type":"category","collapsed":false,"label":"Accounts","items":[{"type":"link","label":"Decentralized IDs","href":"/docs/protocol/js-ceramic/accounts/decentralized-identifiers","docId":"protocol/js-ceramic/accounts/decentralized-identifiers","unlisted":false},{"type":"link","label":"Authorizations","href":"/docs/protocol/js-ceramic/accounts/authorizations","docId":"protocol/js-ceramic/accounts/authorizations","unlisted":false},{"type":"link","label":"Object-Capabilities","href":"/docs/protocol/js-ceramic/accounts/object-capabilities","docId":"protocol/js-ceramic/accounts/object-capabilities","unlisted":false}],"collapsible":true,"href":"/docs/protocol/js-ceramic/accounts/accounts-index"},{"type":"category","collapsed":false,"label":"Networking","items":[{"type":"link","label":"Networks","href":"/docs/protocol/js-ceramic/networking/networks","docId":"protocol/js-ceramic/networking/networks","unlisted":false},{"type":"link","label":"Tip Gossip","href":"/docs/protocol/js-ceramic/networking/tip-gossip","docId":"protocol/js-ceramic/networking/tip-gossip","unlisted":false},{"type":"link","label":"Tip Queries","href":"/docs/protocol/js-ceramic/networking/tip-queries","docId":"protocol/js-ceramic/networking/tip-queries","unlisted":false},{"type":"link","label":"Event Fetching","href":"/docs/protocol/js-ceramic/networking/event-fetching","docId":"protocol/js-ceramic/networking/event-fetching","unlisted":false}],"collapsible":true,"href":"/docs/protocol/js-ceramic/networking/networking-index"},{"type":"category","collapsed":false,"label":"Nodes","items":[{"type":"link","label":"Overview","href":"/docs/protocol/js-ceramic/nodes/overview","docId":"protocol/js-ceramic/nodes/overview","unlisted":false},{"type":"link","label":"Running a Node","href":"/docs/protocol/js-ceramic/nodes/running-a-node","docId":"protocol/js-ceramic/nodes/running-a-node","unlisted":false}],"collapsible":true,"href":"/docs/protocol/js-ceramic/nodes/overview"},{"type":"link","label":"Ceramic API","href":"/docs/protocol/js-ceramic/api","docId":"protocol/js-ceramic/api","unlisted":false}],"composedb":[{"type":"category","collapsed":true,"label":"Getting Started","items":[{"type":"link","label":"1. Set up your environment","href":"/docs/composedb/set-up-your-environment","docId":"composedb/set-up-your-environment","unlisted":false},{"type":"link","label":"2. Create your composite","href":"/docs/composedb/create-your-composite","docId":"composedb/create-your-composite","unlisted":false},{"type":"link","label":"3. Interact with data","href":"/docs/composedb/interact-with-data","docId":"composedb/interact-with-data","unlisted":false},{"type":"link","label":"4. Next Steps","href":"/docs/composedb/next-steps","docId":"composedb/next-steps","unlisted":false},{"type":"link","label":"Core concepts","href":"/docs/composedb/core-concepts","docId":"composedb/core-concepts","unlisted":false}],"collapsible":true,"href":"/docs/composedb/getting-started"},{"type":"category","collapsed":true,"label":"Tutorials and Examples","items":[{"type":"link","label":"Verifiable Credentials","href":"/docs/composedb/examples/verifiable-credentials","docId":"composedb/examples/verifiable-credentials","unlisted":false}],"collapsible":true,"href":"/docs/composedb/examples/"},{"type":"category","collapsed":true,"label":"Guides","items":[{"type":"category","collapsed":false,"label":"Data Modeling","items":[{"type":"link","label":"Model Catalog","href":"/docs/composedb/guides/data-modeling/model-catalog","docId":"composedb/guides/data-modeling/model-catalog","unlisted":false},{"type":"category","collapsed":true,"label":"Writing Models","items":[{"type":"link","label":"Introduction to Modeling","href":"/docs/composedb/guides/data-modeling/introduction-to-modeling","docId":"composedb/guides/data-modeling/introduction-to-modeling","unlisted":false},{"type":"link","label":"Schemas","href":"/docs/composedb/guides/data-modeling/schemas","docId":"composedb/guides/data-modeling/schemas","unlisted":false},{"type":"link","label":"Relations","href":"/docs/composedb/guides/data-modeling/relations","docId":"composedb/guides/data-modeling/relations","unlisted":false}],"collapsible":true,"href":"/docs/composedb/guides/data-modeling/writing-models"},{"type":"link","label":"Composites","href":"/docs/composedb/guides/data-modeling/composites","docId":"composedb/guides/data-modeling/composites","unlisted":false}],"collapsible":true,"href":"/docs/composedb/guides/data-modeling/"},{"type":"category","collapsed":false,"label":"ComposeDB Client","items":[{"type":"category","collapsed":true,"label":"JavaScript Client","items":[{"type":"link","label":"Using Apollo","href":"/docs/composedb/guides/composedb-client/using-apollo","docId":"composedb/guides/composedb-client/using-apollo","unlisted":false},{"type":"link","label":"Using Relay","href":"/docs/composedb/guides/composedb-client/using-relay","docId":"composedb/guides/composedb-client/using-relay","unlisted":false}],"collapsible":true,"href":"/docs/composedb/guides/composedb-client/javascript-client"},{"type":"category","collapsed":true,"label":"Authenticate Users","items":[{"type":"link","label":"User Sessions","href":"/docs/composedb/guides/composedb-client/user-sessions","docId":"composedb/guides/composedb-client/user-sessions","unlisted":false}],"collapsible":true,"href":"/docs/composedb/guides/composedb-client/authenticate-users"}],"collapsible":true,"href":"/docs/composedb/guides/composedb-client/"},{"type":"category","collapsed":false,"label":"ComposeDB Server","items":[{"type":"link","label":"Running Locally","href":"/docs/composedb/guides/composedb-server/running-locally","docId":"composedb/guides/composedb-server/running-locally","unlisted":false},{"type":"link","label":"Running in the Cloud","href":"/docs/composedb/guides/composedb-server/running-in-the-cloud","docId":"composedb/guides/composedb-server/running-in-the-cloud","unlisted":false},{"type":"link","label":"Server Configurations","href":"/docs/composedb/guides/composedb-server/server-configurations","docId":"composedb/guides/composedb-server/server-configurations","unlisted":false},{"type":"link","label":"Access Mainnet","href":"/docs/composedb/guides/composedb-server/access-mainnet","docId":"composedb/guides/composedb-server/access-mainnet","unlisted":false},{"type":"link","label":"Data Storage","href":"/docs/composedb/guides/composedb-server/data-storage","docId":"composedb/guides/composedb-server/data-storage","unlisted":false}],"collapsible":true,"href":"/docs/composedb/guides/composedb-server/"},{"type":"category","collapsed":false,"label":"Data Interactions","items":[{"type":"link","label":"Queries","href":"/docs/composedb/guides/data-interactions/queries","docId":"composedb/guides/data-interactions/queries","unlisted":false},{"type":"link","label":"Mutations","href":"/docs/composedb/guides/data-interactions/mutations","docId":"composedb/guides/data-interactions/mutations","unlisted":false}],"collapsible":true,"href":"/docs/composedb/guides/data-interactions/"}],"collapsible":true,"href":"/docs/composedb/guides/"},{"type":"link","label":"ComposeDB API","href":"https://composedb.js.org/docs/0.5.x/category/public-apis"}],"wheel":[{"type":"link","label":"Wheel Reference","href":"/docs/wheel/wheel-reference","docId":"wheel/wheel-reference","unlisted":false}],"dids":[{"type":"link","label":"Introduction","href":"/docs/dids/introduction","docId":"dids/introduction","unlisted":false},{"type":"category","collapsed":true,"label":"Getting Started","items":[{"type":"link","label":"Installation","href":"/docs/dids/installation","docId":"dids/installation","unlisted":false},{"type":"link","label":"Authorization","href":"/docs/dids/authorization","docId":"dids/authorization","unlisted":false},{"type":"link","label":"Configuration","href":"/docs/dids/configuration","docId":"dids/configuration","unlisted":false},{"type":"link","label":"Managing Sessions","href":"/docs/dids/managing-sessions","docId":"dids/managing-sessions","unlisted":false}],"collapsible":true},{"type":"category","collapsed":true,"label":"Guides","items":[{"type":"link","label":"Concepts overview","href":"/docs/dids/guides/concepts-overview","docId":"dids/guides/concepts-overview","unlisted":false},{"type":"link","label":"Using With ComposeDB Client","href":"/docs/dids/guides/using-with-composedb-client","docId":"dids/guides/using-with-composedb-client","unlisted":false},{"type":"link","label":"Add Support for a Blockchain","href":"/docs/dids/guides/add-chain-support","docId":"dids/guides/add-chain-support","unlisted":false},{"type":"link","label":"Upgrading DID Session","href":"/docs/dids/guides/upgrading-did-session","docId":"dids/guides/upgrading-did-session","unlisted":false}],"collapsible":true},{"type":"link","label":"DIDs API","href":"https://did.js.org/docs/api/modules/dids"}],"ecosystem":[{"type":"link","label":"Overview","href":"/docs/ecosystem/community","docId":"ecosystem/community","unlisted":false}]},"docs":{"composedb/core-concepts":{"id":"composedb/core-concepts","title":"ComposeDB Concepts","description":"Learn about the ComposeDB graph database protocol and technology stack.","sidebar":"composedb"},"composedb/create-your-composite":{"id":"composedb/create-your-composite","title":"Create your composite","description":"Create your composite to serve as your graph database schema. In this guide, we will create your first composite.","sidebar":"composedb"},"composedb/examples/index":{"id":"composedb/examples/index","title":"Starter Applications and Tutorials","description":"Looking for code samples, starter applications, and tutorials to kickstart your development process? Check out some of the examples below for inspiration.","sidebar":"composedb"},"composedb/examples/verifiable-credentials":{"id":"composedb/examples/verifiable-credentials","title":"Verifiable Credentials","description":"Verifiable Credentials are a W3C standard used by development teams to fulfill a need for tamper-evident claims that can be cryptographically proven to reliably reveal who issued the claim, who (if anyone) is the recipient, the content of the claim itself, and more.","sidebar":"composedb"},"composedb/getting-started":{"id":"composedb/getting-started","title":"Getting Started","description":"Learn the basics of ComposeDB by quickly building a \u201cHello World\u201d social application.","sidebar":"composedb"},"composedb/guides/composedb-client/authenticate-users":{"id":"composedb/guides/composedb-client/authenticate-users","title":"Authenticate Users","description":"Set up authentication for your ComposeDB application.","sidebar":"composedb"},"composedb/guides/composedb-client/composedb-client":{"id":"composedb/guides/composedb-client/composedb-client","title":"ComposeDB Client","description":"Connect your app to a ComposeDB server","sidebar":"composedb"},"composedb/guides/composedb-client/javascript-client":{"id":"composedb/guides/composedb-client/javascript-client","title":"JavaScript Client","description":"APIs to interact with ComposeDB from JavaScript, TypeScript, or React.","sidebar":"composedb"},"composedb/guides/composedb-client/user-sessions":{"id":"composedb/guides/composedb-client/user-sessions","title":"User Sessions","description":"Create authenticated sessions for users with great UX.","sidebar":"composedb"},"composedb/guides/composedb-client/using-apollo":{"id":"composedb/guides/composedb-client/using-apollo","title":"Using Apollo GraphQL Client","description":"Apollo is a popular GraphQL client for React and other platforms.","sidebar":"composedb"},"composedb/guides/composedb-client/using-relay":{"id":"composedb/guides/composedb-client/using-relay","title":"Using Relay GraphQL Client","description":"Relay\xa0is a popular GraphQL client for React.","sidebar":"composedb"},"composedb/guides/composedb-server/access-mainnet":{"id":"composedb/guides/composedb-server/access-mainnet","title":"Access Ceramic Mainnet","description":"To join mainnet, you must register your Ceramic node with the 3Box Labs\u2019 Ceramic Anchor Service (CAS). The job of CAS is to anchor Ceramic streams on the Ethereum blockchain so your node will not work without access to CAS.","sidebar":"composedb"},"composedb/guides/composedb-server/composedb-server":{"id":"composedb/guides/composedb-server/composedb-server","title":"ComposeDB Server","description":"Set up and run a ComposeDB Server","sidebar":"composedb"},"composedb/guides/composedb-server/data-storage":{"id":"composedb/guides/composedb-server/data-storage","title":"Data Storage","description":"Store and remove data from your node","sidebar":"composedb"},"composedb/guides/composedb-server/running-in-the-cloud":{"id":"composedb/guides/composedb-server/running-in-the-cloud","title":"Running in the Cloud","description":"Run a ComposeDB server in the cloud","sidebar":"composedb"},"composedb/guides/composedb-server/running-locally":{"id":"composedb/guides/composedb-server/running-locally","title":"Running Locally","description":"Run a ComposeDB server on your local machine, e.g. your laptop","sidebar":"composedb"},"composedb/guides/composedb-server/server-configurations":{"id":"composedb/guides/composedb-server/server-configurations","title":"Server Configurations","description":"Manage the configurations for your ComposeDB server.","sidebar":"composedb"},"composedb/guides/data-interactions/data-interactions":{"id":"composedb/guides/data-interactions/data-interactions","title":"Data Interactions","description":"Query and mutate data on ComposeDB.","sidebar":"composedb"},"composedb/guides/data-interactions/mutations":{"id":"composedb/guides/data-interactions/mutations","title":"Mutations","description":"Create or update data on ComposeDB.","sidebar":"composedb"},"composedb/guides/data-interactions/queries":{"id":"composedb/guides/data-interactions/queries","title":"Queries","description":"Access data stored on the network.","sidebar":"composedb"},"composedb/guides/data-modeling/composites":{"id":"composedb/guides/data-modeling/composites","title":"Composites","description":"Guides for creating, deploying, and using composites.","sidebar":"composedb"},"composedb/guides/data-modeling/data-modeling":{"id":"composedb/guides/data-modeling/data-modeling","title":"Data Modeling","description":"Learn how to model data for ComposeDB.","sidebar":"composedb"},"composedb/guides/data-modeling/introduction-to-modeling":{"id":"composedb/guides/data-modeling/introduction-to-modeling","title":"Introduction to Modeling","description":"Learn the basics of creating a new data model.","sidebar":"composedb"},"composedb/guides/data-modeling/model-catalog":{"id":"composedb/guides/data-modeling/model-catalog","title":"Model Catalog","description":"Discover, share, and reuse data models.","sidebar":"composedb"},"composedb/guides/data-modeling/relations":{"id":"composedb/guides/data-modeling/relations","title":"Relations","description":"Define queryable relationships between models and other models or accounts.","sidebar":"composedb"},"composedb/guides/data-modeling/relations-combine-items":{"id":"composedb/guides/data-modeling/relations-combine-items","title":"Example: Container of Items","description":"Creating the Models"},"composedb/guides/data-modeling/relations-container-of-items":{"id":"composedb/guides/data-modeling/relations-container-of-items","title":"Example: Container of Items","description":"Creating the Models"},"composedb/guides/data-modeling/schemas":{"id":"composedb/guides/data-modeling/schemas","title":"Schemas","description":"Learn how to write high-quality GraphQL schemas for your models.","sidebar":"composedb"},"composedb/guides/data-modeling/writing-models":{"id":"composedb/guides/data-modeling/writing-models","title":"Writing Models","description":"Create new models or extend existing models.","sidebar":"composedb"},"composedb/guides/index":{"id":"composedb/guides/index","title":"Guides","description":"Data Modeling","sidebar":"composedb"},"composedb/interact-with-data":{"id":"composedb/interact-with-data","title":"Interact with data","description":"The final step of getting started with ComposeDB is interacting with your data using GraphQL. In this guide you will learn how to perform GraphQL queries and mutations using your composite.","sidebar":"composedb"},"composedb/introduction":{"id":"composedb/introduction","title":"ComposeDB Docs","description":"Introduction"},"composedb/next-steps":{"id":"composedb/next-steps","title":"Next Steps","description":"After learning the foundations of ComposeDB with the Getting Started guide, you are now ready to start integrating ComposeDB into your application and run in production.","sidebar":"composedb"},"composedb/set-up-your-environment":{"id":"composedb/set-up-your-environment","title":"Set up your environment","description":"The first step to build with ComposeDB is setting up your development environment. Currently, there are two ways of how you can configure your working environment:","sidebar":"composedb"},"dids/authorization":{"id":"dids/authorization","title":"Authorization","description":"Authorize and then use DIDs where needed. At the moment, Ethereum and Solana accounts","sidebar":"dids"},"dids/configuration":{"id":"dids/configuration","title":"Configuration","description":"When creating a DID session, you need to pass an array of string identifiers for resources you want to authorize","sidebar":"dids"},"dids/guides/add-chain-support":{"id":"dids/guides/add-chain-support","title":"Add Support for a Blockchain","description":"The standard use of SIWX, CACAO and DID:PKH allows anyone to implement support for another blockchain or account type to authenticate and authorize writes to the Ceramic Network. Additionally a few standard interfaces enables you to implement an auth and verification library that allows anyone to use it with did-session, the primary library to use DID based accounts with Ceramic. There is just a few steps you have to take, outlined below.","sidebar":"dids"},"dids/guides/concepts-overview":{"id":"dids/guides/concepts-overview","title":"Concepts overview","description":"Ceramic uses the Decentralized Identifier (DID) standard for users accounts. DIDs require no central authority - users control their data and whom they share it with.","sidebar":"dids"},"dids/guides/upgrading-did-session":{"id":"dids/guides/upgrading-did-session","title":"Upgrading DID Session","description":"Upgrading from did-session@0.x.x to did-session@1.x.x","sidebar":"dids"},"dids/guides/using-with-composedb-client":{"id":"dids/guides/using-with-composedb-client","title":"Using With ComposeDB Client","description":"ComposeDB is a set of TypeScript libraries and tools to interact with the Dataverse using the Ceramic network.","sidebar":"dids"},"dids/installation":{"id":"dids/installation","title":"Installation","description":"did-session","sidebar":"dids"},"dids/introduction":{"id":"dids/introduction","title":"Welcome to Decentralized Identifiers","description":"A suite of tools and APIs to interact with and manage decentralized identifiers (DIDs).","sidebar":"dids"},"dids/managing-sessions":{"id":"dids/managing-sessions","title":"Managing Sessions","description":"A session can be managed in a few different ways. All sessions consist of a session key in the form of a did:key and a CACAO object-capability.","sidebar":"dids"},"ecosystem/community":{"id":"ecosystem/community","title":"Community","description":"Explore the many ways to connect, learn, and participate in the ComposeDB community.","sidebar":"ecosystem"},"introduction/ceramic-roadmap":{"id":"introduction/ceramic-roadmap","title":"Ceramic Roadmap","description":"Since the launch of the ComposeDB Beta, the core Ceramic team remains committed to making ongoing improvements","sidebar":"docs"},"introduction/composedb-overview":{"id":"introduction/composedb-overview","title":"ComposeDB Docs","description":"Introduction","sidebar":"docs"},"introduction/did-overview":{"id":"introduction/did-overview","title":"Decentralized Identifiers","description":"Cermic comes with a suite of tools and APIs to interact with and manage decentralized identifiers (DIDs). DIDs require no central authority - users control their data and whom they share it with.","sidebar":"docs"},"introduction/intro":{"id":"introduction/intro","title":"The Composable Data Network","description":"Ceramic is a decentralized data network that powers an ecosystem of interoperable Web3 applications and services. Ceramic\'s event streaming protocol is a highly-scalable decentralized data infrastructure used for building all kinds of interoperable Web3 services and protocols, such as decentralized databases. Ceramic-powered databases and services enable thousands of Web3 developers to build data-intensive applications and solve the world\'s most complex data challenges. By decentralizing application databases, Ceramic makes data composable and reusable across all applications.","sidebar":"docs"},"introduction/protocol-overview":{"id":"introduction/protocol-overview","title":"Ceramic Protocol","description":"Ceramic is a decentralized event streaming protocol that enables developers to build decentralized databases, distributed compute pipelines, and authenticated data feeds, etc. Ceramic nodes can subscribe to subsets of streams forgoing the need of a global network state. This makes Ceramic an eventually consistent system (as opposed to strongly consistent like L1 blockchains), enabling web scale applications to be built reliably.","sidebar":"docs"},"introduction/why-ceramic":{"id":"introduction/why-ceramic","title":"Why Ceramic?","description":"---","sidebar":"docs"},"protocol/js-ceramic/accounts/accounts-index":{"id":"protocol/js-ceramic/accounts/accounts-index","title":"Accounts","description":"---","sidebar":"protocol"},"protocol/js-ceramic/accounts/authorizations":{"id":"protocol/js-ceramic/accounts/authorizations","title":"Authorizations","description":"---","sidebar":"protocol"},"protocol/js-ceramic/accounts/decentralized-identifiers":{"id":"protocol/js-ceramic/accounts/decentralized-identifiers","title":"Identifiers","description":"---","sidebar":"protocol"},"protocol/js-ceramic/accounts/object-capabilities":{"id":"protocol/js-ceramic/accounts/object-capabilities","title":"Object Capabilities","description":"---","sidebar":"protocol"},"protocol/js-ceramic/api":{"id":"protocol/js-ceramic/api","title":"Ceramic API","description":"---","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/authentication/did-jsonrpc":{"id":"protocol/js-ceramic/guides/ceramic-clients/authentication/did-jsonrpc","title":"DID JSON-RPC client","description":"---","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/authentication/did-session":{"id":"protocol/js-ceramic/guides/ceramic-clients/authentication/did-session","title":"Module: did-session","description":"Manages user account DIDs in web based environments.","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/authentication/key-did":{"id":"protocol/js-ceramic/guides/ceramic-clients/authentication/key-did","title":"Key DID libraries","description":"---","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/ceramic-http":{"id":"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/ceramic-http","title":"Ceramic HTTP client","description":"The Ceramic HTTP client library can be used in browsers and Node.js to connect your application to a Ceramic node. It is actively maintained and supports the latest Ceramic features.","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/pinning":{"id":"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/pinning","title":"Pinning","description":"Pinning allows you to persist and make streams available on a Ceramic node beyond a single session. This guide demonstrates how to add and remove streams from your node\'s pinset, and how to list the streams currently in the pinset. In order to interact with a pinset, you must have installed a Ceramic client.","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/queries":{"id":"protocol/js-ceramic/guides/ceramic-clients/javascript-clients/queries","title":"Queries","description":"This guide demonstrates how to query streams during runtime using the JS HTTP and JS Core clients.","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-clients/stream-api/caip10-link":{"id":"protocol/js-ceramic/guides/ceramic-clients/stream-api/caip10-link","title":"CAIP-10 Link client","description":"---","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-nodes/running-cloud":{"id":"protocol/js-ceramic/guides/ceramic-nodes/running-cloud","title":"Running Ceramic in production","description":"---","sidebar":"protocol"},"protocol/js-ceramic/guides/ceramic-nodes/running-locally":{"id":"protocol/js-ceramic/guides/ceramic-nodes/running-locally","title":"Launch a local Ceramic node","description":"---","sidebar":"protocol"},"protocol/js-ceramic/guides/guides-index":{"id":"protocol/js-ceramic/guides/guides-index","title":"Ceramic Development Guides","description":"---","sidebar":"protocol"},"protocol/js-ceramic/networking/event-fetching":{"id":"protocol/js-ceramic/networking/event-fetching","title":"Event Fetching","description":"Once a tip is discovered through the Tip Gossip or Tip Query protocols a node knows both the StreamID and the latest event CID of the stream. The latest Event contains the CID of the prev Event and so on until the Init Event is found in the event log. The Init Event\'s CID is also in the StreamID. This is proof that the tip is part of the stream identified by the StreamId.","sidebar":"protocol"},"protocol/js-ceramic/networking/networking-index":{"id":"protocol/js-ceramic/networking/networking-index","title":"Networking","description":"Networking sub-protocols for Ceramic","sidebar":"protocol"},"protocol/js-ceramic/networking/networks":{"id":"protocol/js-ceramic/networking/networks","title":"Networks","description":"Information about the default Ceramic networks","sidebar":"protocol"},"protocol/js-ceramic/networking/tip-gossip":{"id":"protocol/js-ceramic/networking/tip-gossip","title":"Tip Gossip","description":"When a stream is updated, the latest event (tip) is gossiped and propagated out to all the nodes in a network that are interested in that particular stream. Additionally, listening for all tips, allows a node to learn about streams it did not know about. This allows all interested nodes in the network to quickly get the latest update and state for a stream.","sidebar":"protocol"},"protocol/js-ceramic/networking/tip-queries":{"id":"protocol/js-ceramic/networking/tip-queries","title":"Tip Queries","description":"Ceramic streams are identified by a URI called StreamIds. Nodes that want to sync a stream need to query the network for the tip of that stream using its StreamId.","sidebar":"protocol"},"protocol/js-ceramic/nodes/overview":{"id":"protocol/js-ceramic/nodes/overview","title":"Nodes Overview","description":"---","sidebar":"protocol"},"protocol/js-ceramic/nodes/running-a-node":{"id":"protocol/js-ceramic/nodes/running-a-node","title":"Running a Node","description":"---","sidebar":"protocol"},"protocol/js-ceramic/overview":{"id":"protocol/js-ceramic/overview","title":"Ceramic Protocol","description":"Ceramic is a decentralized event streaming protocol that enables developers to build decentralized databases, distributed compute pipelines, and authenticated data feeds, etc. Ceramic nodes can subscribe to subsets of streams forgoing the need of a global network state. This makes Ceramic an eventually consistent system (as opposed to strongly consistent like L1 blockchains), enabling web scale applications to be built reliably.","sidebar":"protocol"},"protocol/js-ceramic/streams/consensus":{"id":"protocol/js-ceramic/streams/consensus","title":"Consensus","description":"Consensus Model","sidebar":"protocol"},"protocol/js-ceramic/streams/event-log":{"id":"protocol/js-ceramic/streams/event-log","title":"Event Log","description":"---","sidebar":"protocol"},"protocol/js-ceramic/streams/lifecycle":{"id":"protocol/js-ceramic/streams/lifecycle","title":"Stream Lifecycle","description":"Write Lifecycle","sidebar":"protocol"},"protocol/js-ceramic/streams/streams-index":{"id":"protocol/js-ceramic/streams/streams-index","title":"Streams","description":"Data structures core to Ceramic","sidebar":"protocol"},"protocol/js-ceramic/streams/uri-scheme":{"id":"protocol/js-ceramic/streams/uri-scheme","title":"URI Scheme","description":"---","sidebar":"protocol"},"wheel/wheel-reference":{"id":"wheel/wheel-reference","title":"Wheel reference","description":"This reference explains Wheel prompt options and covers Ceramic configurations in more detail.","sidebar":"wheel"}}}')}}]);
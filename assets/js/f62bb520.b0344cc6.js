"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2096],{12346:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>n,metadata:()=>t,toc:()=>r});var l=s(11527),i=s(63883);const n={},d="Model Catalog",t={id:"composedb/guides/data-modeling/model-catalog",title:"Model Catalog",description:"Discover, share, and reuse data models.",source:"@site/docs/composedb/guides/data-modeling/model-catalog.mdx",sourceDirName:"composedb/guides/data-modeling",slug:"/composedb/guides/data-modeling/model-catalog",permalink:"/docs/composedb/guides/data-modeling/model-catalog",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"composedb",previous:{title:"Data Modeling",permalink:"/docs/composedb/guides/data-modeling/"},next:{title:"Writing Models",permalink:"/docs/composedb/guides/data-modeling/writing-models"}},a={},r=[{value:"Overview",id:"overview",level:2},{value:"Use Cases",id:"use-cases",level:3},{value:"Adding models to the catalog",id:"adding-models-to-the-catalog",level:2},{value:"Using models from the catalog",id:"using-models-from-the-catalog",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"List all models",id:"list-all-models",level:3},{value:"Using a single model",id:"using-a-single-model",level:3},{value:"Using multiple models",id:"using-multiple-models",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Related Guides",id:"related-guides",level:2}];function c(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.h1,{id:"model-catalog",children:"Model Catalog"}),"\n",(0,l.jsx)(o.p,{children:"Discover, share, and reuse data models."}),"\n",(0,l.jsx)(o.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(o.hr,{}),"\n",(0,l.jsx)(o.p,{children:"The catalog is a free and open source repository of all data models created by the ComposeDB developer community. The catalog aims to make it as easy as possible for developers to discover, share, and reuse each others models and underlying data."}),"\n",(0,l.jsx)(o.p,{children:(0,l.jsx)(o.img,{alt:"Data Model Table",src:s(50150).Z+"",width:"2824",height:"1422"})}),"\n",(0,l.jsx)(o.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsx)(o.li,{children:"Discover high-quality models for your app"}),"\n",(0,l.jsx)(o.li,{children:"Share and distribute your models to others"}),"\n"]}),"\n",(0,l.jsx)(o.h2,{id:"adding-models-to-the-catalog",children:"Adding models to the catalog"}),"\n",(0,l.jsx)(o.hr,{}),"\n",(0,l.jsx)(o.p,{children:"Models in all deployed composites are automatically available on the catalog."}),"\n",(0,l.jsx)(o.p,{children:"How it works:"}),"\n",(0,l.jsxs)(o.ol,{children:["\n",(0,l.jsxs)(o.li,{children:["A developer deploys a ",(0,l.jsx)(o.a,{href:"/docs/composedb/guides/data-modeling/composites",children:"composite"})," containing models to testnet or mainnet"]}),"\n",(0,l.jsx)(o.li,{children:"An indexer builds a catalog of all deployed models and exposes it via API"}),"\n",(0,l.jsx)(o.li,{children:"The catalog is automatically available on various interfaces, including ComposeDB CLI"}),"\n"]}),"\n",(0,l.jsx)(o.h2,{id:"using-models-from-the-catalog",children:"Using models from the catalog"}),"\n",(0,l.jsx)(o.hr,{}),"\n",(0,l.jsx)(o.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsxs)(o.p,{children:["You need a running instance of ComposeDB server and CLI to use the catalog. See ",(0,l.jsx)(o.a,{href:"/docs/composedb/set-up-your-environment",children:"set up your environment"})," to get started."]}),"\n",(0,l.jsx)(o.h3,{id:"list-all-models",children:"List all models"}),"\n",(0,l.jsx)(o.p,{children:"Using ComposeDB CLI, run the following command to list all models:"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-sh",children:"composedb model:list --table\n"})}),"\n",(0,l.jsx)(o.p,{children:"You will see a table where each model has the following metadata properties:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Name"})," - name of the model"]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"ID"})," - unique identifier (streamID) of the model"]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Description"})," - description of the model"]}),"\n"]}),"\n",(0,l.jsx)(o.h3,{id:"using-a-single-model",children:"Using a single model"}),"\n",(0,l.jsx)(o.p,{children:"Fetch a single model from the catalog and convert it into a composite, using its model ID:"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-sh",children:"composedb composite:from-model kjzl6hvfrbw6c5i55ks5m4hhyuh0jylw4g7x0asndu97i7luts4dfzvm35oev65 --output=my-composite.json\n"})}),"\n",(0,l.jsx)(o.h3,{id:"using-multiple-models",children:"Using multiple models"}),"\n",(0,l.jsxs)(o.p,{children:["Run the ",(0,l.jsx)(o.code,{children:"composite:from-model"})," command depicted above for each model you want to use in your application. Remember to change the composite file name to avoid collisions. After you have multiple composite files, merge them. See Merging Composites."]}),"\n",(0,l.jsx)(o.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,l.jsx)(o.hr,{}),"\n",(0,l.jsx)(o.p,{children:"To use your newly created composite in your app, you will need to deploy and compile your composite."}),"\n",(0,l.jsx)(o.h2,{id:"related-guides",children:"Related Guides"}),"\n",(0,l.jsx)(o.hr,{}),"\n",(0,l.jsxs)(o.p,{children:["Can\u2019t find what you\u2019re looking for in the catalog? See ",(0,l.jsx)(o.a,{href:"/docs/composedb/guides/data-modeling/writing-models",children:"Writing Models"})," to learn how to write your own models."]})]})}function m(e={}){const{wrapper:o}={...(0,i.a)(),...e.components};return o?(0,l.jsx)(o,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},50150:(e,o,s)=>{s.d(o,{Z:()=>l});const l=s.p+"assets/images/data-model-table-9edfb95dc33320c39c7c54bf99facad5.png"},63883:(e,o,s)=>{s.d(o,{Z:()=>t,a:()=>d});var l=s(50959);const i={},n=l.createContext(i);function d(e){const o=l.useContext(n);return l.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),l.createElement(n.Provider,{value:o},e.children)}}}]);